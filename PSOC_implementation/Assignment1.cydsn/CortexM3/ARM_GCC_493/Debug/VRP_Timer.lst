ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"VRP_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.VRP_Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	VRP_Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	VRP_Timer_Enable, %function
  24              	VRP_Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\VRP_Timer.c"
   1:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/VRP_Timer.c **** * File Name: VRP_Timer.c
   3:.\Generated_Source\PSoC5/VRP_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/VRP_Timer.c **** *
   5:.\Generated_Source\PSoC5/VRP_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/VRP_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/VRP_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/VRP_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/VRP_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/VRP_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/VRP_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/VRP_Timer.c **** *
  15:.\Generated_Source\PSoC5/VRP_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/VRP_Timer.c **** *
  17:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/VRP_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/VRP_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/VRP_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/VRP_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  24:.\Generated_Source\PSoC5/VRP_Timer.c **** #include "VRP_Timer.h"
  25:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  26:.\Generated_Source\PSoC5/VRP_Timer.c **** uint8 VRP_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  28:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  29:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_Init
  31:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 2


  32:.\Generated_Source\PSoC5/VRP_Timer.c **** *
  33:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/VRP_Timer.c **** *
  36:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/VRP_Timer.c **** *
  39:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/VRP_Timer.c **** *
  42:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/VRP_Timer.c **** {
  45:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if(!VRP_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/VRP_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/VRP_Timer.c ****             uint8 VRP_Timer_interruptState;
  48:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  50:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (VRP_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL &= VRP_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  54:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/VRP_Timer.c ****             VRP_Timer_CONTROL2 &= ((uint8)(~VRP_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  59:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/VRP_Timer.c ****             VRP_Timer_CONTROL3 &= ((uint8)(~VRP_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  63:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (VRP_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/VRP_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/VRP_Timer.c ****             VRP_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  69:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (VRP_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/VRP_Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/VRP_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/VRP_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/VRP_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  76:.\Generated_Source\PSoC5/VRP_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/VRP_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/VRP_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/VRP_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  82:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  84:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (VRP_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/VRP_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/VRP_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL2 |= VRP_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/VRP_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 3


  89:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  90:.\Generated_Source\PSoC5/VRP_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/VRP_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL3 &= ((uint8)(~VRP_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL3 |= VRP_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  95:.\Generated_Source\PSoC5/VRP_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL3 &= ((uint8)(~VRP_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL3 |= VRP_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/VRP_Timer.c **** 
  99:.\Generated_Source\PSoC5/VRP_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/VRP_Timer.c ****                 VRP_Timer_CONTROL3 |= VRP_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/VRP_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 103:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 105:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_RT1 &= ((uint8)(~VRP_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_RT1 |= VRP_Timer_SYNC;
 108:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 109:.\Generated_Source\PSoC5/VRP_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_RT1 &= ((uint8)(~VRP_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_RT1 |= VRP_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 113:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL2 |= VRP_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 117:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/VRP_Timer.c ****     VRP_Timer_WritePeriod(VRP_Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/VRP_Timer.c ****     VRP_Timer_WriteCounter(VRP_Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 121:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (VRP_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CAPTURE_COUNT_CTRL |= VRP_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_SetCaptureCount(VRP_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 126:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (VRP_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/VRP_Timer.c ****             VRP_Timer_SetCaptureMode(VRP_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 131:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (VRP_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/VRP_Timer.c ****             #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/VRP_Timer.c ****                 if (0u == (VRP_Timer_CONTROL & VRP_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/VRP_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/VRP_Timer.c ****                     VRP_Timer_SetTriggerMode(VRP_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/VRP_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/VRP_Timer.c ****             #endif /* (!VRP_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 140:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 144:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_STATUS_AUX_CTRL |= VRP_Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 4


 146:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 147:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/VRP_Timer.c ****         CyExitCriticalSection(VRP_Timer_interruptState);
 149:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 150:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (VRP_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/VRP_Timer.c ****             VRP_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/VRP_Timer.c **** 		
 154:.\Generated_Source\PSoC5/VRP_Timer.c **** 		
 155:.\Generated_Source\PSoC5/VRP_Timer.c ****         #if (VRP_Timer_InterruptOnCaptureCount && !VRP_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/VRP_Timer.c ****             VRP_Timer_SetInterruptCount(VRP_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/VRP_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 159:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 162:.\Generated_Source\PSoC5/VRP_Timer.c ****     VRP_Timer_SetInterruptMode(VRP_Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 164:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 165:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 166:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_Enable
 168:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 170:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 173:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 176:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 179:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/VRP_Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 182:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (VRP_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_GLOBAL_ENABLE |= VRP_Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_GLOBAL_STBY_ENABLE |= VRP_Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 188:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED || VRP_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL |= VRP_Timer_CTRL_ENABLE;
  32              		.loc 1 190 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 5


  39              		.align	2
  40              	.L2:
  41 000c 7B640040 		.word	1073767547
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	VRP_Timer_Enable, .-VRP_Timer_Enable
  45              		.section	.text.VRP_Timer_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	VRP_Timer_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	VRP_Timer_Stop, %function
  51              	VRP_Timer_Stop:
  52              	.LFB3:
 191:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 193:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 194:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 195:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_Start
 197:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 199:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/VRP_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/VRP_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 204:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 207:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 210:.\Generated_Source\PSoC5/VRP_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/VRP_Timer.c **** *  VRP_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/VRP_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 214:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 217:.\Generated_Source\PSoC5/VRP_Timer.c ****     if(VRP_Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/VRP_Timer.c ****     {
 219:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_Init();
 220:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 221:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/VRP_Timer.c ****     }
 223:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 224:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/VRP_Timer.c ****     VRP_Timer_Enable();
 226:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 227:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 228:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 229:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_Stop
 231:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 233:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 6


 234:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/VRP_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 237:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 240:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 243:.\Generated_Source\PSoC5/VRP_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/VRP_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 246:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/VRP_Timer.c **** {
  53              		.loc 1 248 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 249:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if(!VRP_Timer_UDB_CONTROL_REG_REMOVED || VRP_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL &= ((uint8)(~VRP_Timer_CTRL_ENABLE));
  58              		.loc 1 251 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 7B640040 		.word	1073767547
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	VRP_Timer_Stop, .-VRP_Timer_Stop
  71              		.section	.text.VRP_Timer_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	VRP_Timer_SetInterruptMode
  74              		.thumb
  75              		.thumb_func
  76              		.type	VRP_Timer_SetInterruptMode, %function
  77              	VRP_Timer_SetInterruptMode:
  78              	.LFB4:
 252:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 254:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (VRP_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_GLOBAL_ENABLE &= ((uint8)(~VRP_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~VRP_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 260:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 261:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 262:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 7


 265:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 266:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/VRP_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 271:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/VRP_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/VRP_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 275:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 278:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/VRP_Timer.c **** {
  79              		.loc 1 280 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 281:.\Generated_Source\PSoC5/VRP_Timer.c ****     VRP_Timer_STATUS_MASK = interruptMode;
  85              		.loc 1 281 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 8B640040 		.word	1073767563
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	VRP_Timer_SetInterruptMode, .-VRP_Timer_SetInterruptMode
  96              		.section	.text.VRP_Timer_SoftwareCapture,"ax",%progbits
  97              		.align	2
  98              		.global	VRP_Timer_SoftwareCapture
  99              		.thumb
 100              		.thumb_func
 101              		.type	VRP_Timer_SoftwareCapture, %function
 102              	VRP_Timer_SoftwareCapture:
 103              	.LFB5:
 282:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 283:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 284:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 285:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 289:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 292:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 295:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 8


 297:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 298:.\Generated_Source\PSoC5/VRP_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/VRP_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 301:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 104              		.loc 1 303 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if(VRP_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/VRP_Timer.c ****         (void)CY_GET_REG16(VRP_Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/VRP_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/VRP_Timer.c ****         (void)CY_GET_REG8(VRP_Timer_COUNTER_LSB_PTR_8BIT);
 109              		.loc 1 308 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 0004 7047     		bx	lr
 113              	.L12:
 114 0006 00BF     		.align	2
 115              	.L11:
 116 0008 0A640040 		.word	1073767434
 117              		.cfi_endproc
 118              	.LFE5:
 119              		.size	VRP_Timer_SoftwareCapture, .-VRP_Timer_SoftwareCapture
 120              		.section	.text.VRP_Timer_ReadStatusRegister,"ax",%progbits
 121              		.align	2
 122              		.global	VRP_Timer_ReadStatusRegister
 123              		.thumb
 124              		.thumb_func
 125              		.type	VRP_Timer_ReadStatusRegister, %function
 126              	VRP_Timer_ReadStatusRegister:
 127              	.LFB6:
 309:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif/* (VRP_Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 312:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 313:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 314:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 318:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/VRP_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/VRP_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 323:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 326:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 329:.\Generated_Source\PSoC5/VRP_Timer.c **** * Side Effects:
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 9


 330:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 332:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/VRP_Timer.c **** uint8   VRP_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 128              		.loc 1 334 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/VRP_Timer.c ****     return (VRP_Timer_STATUS);
 133              		.loc 1 335 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 136              		.loc 1 336 0
 137 0004 7047     		bx	lr
 138              	.L15:
 139 0006 00BF     		.align	2
 140              	.L14:
 141 0008 6B640040 		.word	1073767531
 142              		.cfi_endproc
 143              	.LFE6:
 144              		.size	VRP_Timer_ReadStatusRegister, .-VRP_Timer_ReadStatusRegister
 145              		.section	.text.VRP_Timer_ReadControlRegister,"ax",%progbits
 146              		.align	2
 147              		.global	VRP_Timer_ReadControlRegister
 148              		.thumb
 149              		.thumb_func
 150              		.type	VRP_Timer_ReadControlRegister, %function
 151              	VRP_Timer_ReadControlRegister:
 152              	.LFB7:
 337:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 338:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 339:.\Generated_Source\PSoC5/VRP_Timer.c **** #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 341:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 342:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 346:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 349:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 352:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 355:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/VRP_Timer.c **** uint8 VRP_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 153              		.loc 1 357 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 10


 157              		@ link register save eliminated.
 358:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/VRP_Timer.c ****         return ((uint8)VRP_Timer_CONTROL);
 158              		.loc 1 359 0
 159 0000 014B     		ldr	r3, .L17
 160 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:.\Generated_Source\PSoC5/VRP_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/VRP_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* (!VRP_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 161              		.loc 1 363 0
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 00BF     		.align	2
 165              	.L17:
 166 0008 7B640040 		.word	1073767547
 167              		.cfi_endproc
 168              	.LFE7:
 169              		.size	VRP_Timer_ReadControlRegister, .-VRP_Timer_ReadControlRegister
 170              		.section	.text.VRP_Timer_WriteControlRegister,"ax",%progbits
 171              		.align	2
 172              		.global	VRP_Timer_WriteControlRegister
 173              		.thumb
 174              		.thumb_func
 175              		.type	VRP_Timer_WriteControlRegister, %function
 176              	VRP_Timer_WriteControlRegister:
 177              	.LFB8:
 364:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 365:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 366:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 370:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 373:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/VRP_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 376:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 378:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 178              		.loc 1 380 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL1:
 381:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL = control;
 184              		.loc 1 382 0
 185 0000 014B     		ldr	r3, .L20
 186 0002 1870     		strb	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L21:
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 11


 189 0006 00BF     		.align	2
 190              	.L20:
 191 0008 7B640040 		.word	1073767547
 192              		.cfi_endproc
 193              	.LFE8:
 194              		.size	VRP_Timer_WriteControlRegister, .-VRP_Timer_WriteControlRegister
 195              		.section	.text.VRP_Timer_ReadPeriod,"ax",%progbits
 196              		.align	2
 197              		.global	VRP_Timer_ReadPeriod
 198              		.thumb
 199              		.thumb_func
 200              		.type	VRP_Timer_ReadPeriod, %function
 201              	VRP_Timer_ReadPeriod:
 202              	.LFB9:
 383:.\Generated_Source\PSoC5/VRP_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/VRP_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* (!VRP_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 387:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 388:.\Generated_Source\PSoC5/VRP_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 390:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 391:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 395:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 398:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 401:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 404:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/VRP_Timer.c **** uint16 VRP_Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 203              		.loc 1 406 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/VRP_Timer.c ****    #if(VRP_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/VRP_Timer.c ****        return ((uint16)CY_GET_REG16(VRP_Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/VRP_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/VRP_Timer.c ****        return (CY_GET_REG16(VRP_Timer_PERIOD_LSB_PTR));
 208              		.loc 1 410 0
 209 0000 014B     		ldr	r3, .L23
 210 0002 1888     		ldrh	r0, [r3]
 411:.\Generated_Source\PSoC5/VRP_Timer.c ****    #endif /* (VRP_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 211              		.loc 1 412 0
 212 0004 80B2     		uxth	r0, r0
 213 0006 7047     		bx	lr
 214              	.L24:
 215              		.align	2
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 12


 216              	.L23:
 217 0008 54680040 		.word	1073768532
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	VRP_Timer_ReadPeriod, .-VRP_Timer_ReadPeriod
 221              		.section	.text.VRP_Timer_WritePeriod,"ax",%progbits
 222              		.align	2
 223              		.global	VRP_Timer_WritePeriod
 224              		.thumb
 225              		.thumb_func
 226              		.type	VRP_Timer_WritePeriod, %function
 227              	VRP_Timer_WritePeriod:
 228              	.LFB10:
 413:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 414:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 415:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 419:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/VRP_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 423:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/VRP_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/VRP_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 427:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 430:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_WritePeriod(uint16 period) 
 432:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 229              		.loc 1 432 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL2:
 433:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if(VRP_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/VRP_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/VRP_Timer.c ****         CY_SET_REG16(VRP_Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/VRP_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/VRP_Timer.c ****         CY_SET_REG16(VRP_Timer_PERIOD_LSB_PTR, period);
 235              		.loc 1 437 0
 236 0000 014B     		ldr	r3, .L26
 237 0002 1880     		strh	r0, [r3]	@ movhi
 238 0004 7047     		bx	lr
 239              	.L27:
 240 0006 00BF     		.align	2
 241              	.L26:
 242 0008 54680040 		.word	1073768532
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	VRP_Timer_WritePeriod, .-VRP_Timer_WritePeriod
 246              		.section	.text.VRP_Timer_ReadCapture,"ax",%progbits
 247              		.align	2
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 13


 248              		.global	VRP_Timer_ReadCapture
 249              		.thumb
 250              		.thumb_func
 251              		.type	VRP_Timer_ReadCapture, %function
 252              	VRP_Timer_ReadCapture:
 253              	.LFB11:
 438:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 440:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 441:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 442:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 446:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 449:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 451:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 452:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 455:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/VRP_Timer.c **** uint16 VRP_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/VRP_Timer.c ****    #if(VRP_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/VRP_Timer.c ****        return ((uint16)CY_GET_REG16(VRP_Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/VRP_Timer.c ****    #else
 461:.\Generated_Source\PSoC5/VRP_Timer.c ****        return (CY_GET_REG16(VRP_Timer_CAPTURE_LSB_PTR));
 259              		.loc 1 461 0
 260 0000 014B     		ldr	r3, .L29
 261 0002 1888     		ldrh	r0, [r3]
 462:.\Generated_Source\PSoC5/VRP_Timer.c ****    #endif /* (VRP_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 262              		.loc 1 463 0
 263 0004 80B2     		uxth	r0, r0
 264 0006 7047     		bx	lr
 265              	.L30:
 266              		.align	2
 267              	.L29:
 268 0008 94680040 		.word	1073768596
 269              		.cfi_endproc
 270              	.LFE11:
 271              		.size	VRP_Timer_ReadCapture, .-VRP_Timer_ReadCapture
 272              		.section	.text.VRP_Timer_WriteCounter,"ax",%progbits
 273              		.align	2
 274              		.global	VRP_Timer_WriteCounter
 275              		.thumb
 276              		.thumb_func
 277              		.type	VRP_Timer_WriteCounter, %function
 278              	VRP_Timer_WriteCounter:
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 14


 279              	.LFB12:
 464:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 465:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 466:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 470:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 473:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/VRP_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 476:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 479:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_WriteCounter(uint16 counter) 
 481:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 280              		.loc 1 481 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL3:
 482:.\Generated_Source\PSoC5/VRP_Timer.c ****    #if(VRP_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/VRP_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/VRP_Timer.c ****          */
 486:.\Generated_Source\PSoC5/VRP_Timer.c ****         CY_SET_REG16(VRP_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/VRP_Timer.c ****         
 488:.\Generated_Source\PSoC5/VRP_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/VRP_Timer.c ****         CY_SET_REG16(VRP_Timer_COUNTER_LSB_PTR, counter);
 286              		.loc 1 489 0
 287 0000 014B     		ldr	r3, .L32
 288 0002 1880     		strh	r0, [r3]	@ movhi
 289 0004 7047     		bx	lr
 290              	.L33:
 291 0006 00BF     		.align	2
 292              	.L32:
 293 0008 14680040 		.word	1073768468
 294              		.cfi_endproc
 295              	.LFE12:
 296              		.size	VRP_Timer_WriteCounter, .-VRP_Timer_WriteCounter
 297              		.section	.text.VRP_Timer_ReadCounter,"ax",%progbits
 298              		.align	2
 299              		.global	VRP_Timer_ReadCounter
 300              		.thumb
 301              		.thumb_func
 302              		.type	VRP_Timer_ReadCounter, %function
 303              	VRP_Timer_ReadCounter:
 304              	.LFB13:
 490:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 492:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 493:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 494:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 15


 495:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 498:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 501:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 504:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 507:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/VRP_Timer.c **** uint16 VRP_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 305              		.loc 1 509 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if(VRP_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/VRP_Timer.c ****         (void)CY_GET_REG16(VRP_Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/VRP_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/VRP_Timer.c ****         (void)CY_GET_REG8(VRP_Timer_COUNTER_LSB_PTR_8BIT);
 310              		.loc 1 516 0
 311 0000 024B     		ldr	r3, .L35
 312 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif/* (VRP_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 519:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if(VRP_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/VRP_Timer.c ****         return ((uint16)CY_GET_REG16(VRP_Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/VRP_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/VRP_Timer.c ****         return (CY_GET_REG16(VRP_Timer_CAPTURE_LSB_PTR));
 313              		.loc 1 523 0
 314 0004 024B     		ldr	r3, .L35+4
 315 0006 1888     		ldrh	r0, [r3]
 524:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* (VRP_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 316              		.loc 1 525 0
 317 0008 80B2     		uxth	r0, r0
 318 000a 7047     		bx	lr
 319              	.L36:
 320              		.align	2
 321              	.L35:
 322 000c 0A640040 		.word	1073767434
 323 0010 94680040 		.word	1073768596
 324              		.cfi_endproc
 325              	.LFE13:
 326              		.size	VRP_Timer_ReadCounter, .-VRP_Timer_ReadCounter
 327              		.section	.text.VRP_Timer_ClearFIFO,"ax",%progbits
 328              		.align	2
 329              		.global	VRP_Timer_ClearFIFO
 330              		.thumb
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 16


 331              		.thumb_func
 332              		.type	VRP_Timer_ClearFIFO, %function
 333              	VRP_Timer_ClearFIFO:
 334              	.LFB14:
 526:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 527:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 528:.\Generated_Source\PSoC5/VRP_Timer.c **** #if(!VRP_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 530:.\Generated_Source\PSoC5/VRP_Timer.c ****     
 531:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/VRP_Timer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/VRP_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/VRP_Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 536:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 537:.\Generated_Source\PSoC5/VRP_Timer.c **** #if (VRP_Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 539:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 540:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 544:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 547:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/VRP_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/VRP_Timer.c **** *  #define VRP_Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/VRP_Timer.c **** #define VRP_Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/VRP_Timer.c **** #define VRP_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/VRP_Timer.c **** #define VRP_Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/VRP_Timer.c **** #define VRP_Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/VRP_Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/VRP_Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/VRP_Timer.c **** *  VRP_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/VRP_Timer.c **** *  VRP_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/VRP_Timer.c **** *  VRP_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/VRP_Timer.c **** *  VRP_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 562:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 564:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 565:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 568:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/VRP_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << VRP_Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/VRP_Timer.c ****     captureMode &= (VRP_Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 572:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL &= ((uint8)(~VRP_Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 576:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* (!VRP_Timer_UDB_CONTROL_REG_REMOVED) */
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 17


 579:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 580:.\Generated_Source\PSoC5/VRP_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 582:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 583:.\Generated_Source\PSoC5/VRP_Timer.c **** #if (VRP_Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 585:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 586:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 590:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 593:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/VRP_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/VRP_Timer.c ****     #define VRP_Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/VRP_Timer.c ****     #define VRP_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/VRP_Timer.c ****     #define VRP_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/VRP_Timer.c ****     #define VRP_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/VRP_Timer.c ****     #define VRP_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 601:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 603:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 604:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 607:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/VRP_Timer.c ****     triggerMode &= VRP_Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 610:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 611:.\Generated_Source\PSoC5/VRP_Timer.c ****     
 612:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL &= ((uint8)(~VRP_Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 615:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL |= (triggerMode | VRP_Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 619:.\Generated_Source\PSoC5/VRP_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 621:.\Generated_Source\PSoC5/VRP_Timer.c **** #if (VRP_Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 623:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 624:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 628:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 631:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 633:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 634:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 18


 636:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 637:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 640:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 641:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL |= VRP_Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 644:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 645:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 646:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 650:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 653:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 655:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 656:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 658:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 659:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 662:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed
 663:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL &= ((uint8)(~VRP_Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 666:.\Generated_Source\PSoC5/VRP_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 668:.\Generated_Source\PSoC5/VRP_Timer.c **** #if(VRP_Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 670:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 671:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 675:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 678:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/VRP_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/VRP_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/VRP_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/VRP_Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 684:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 686:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 687:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 690:.\Generated_Source\PSoC5/VRP_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/VRP_Timer.c ****     interruptCount &= VRP_Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/VRP_Timer.c **** 
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 19


 693:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if (!VRP_Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL &= ((uint8)(~VRP_Timer_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/VRP_Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/VRP_Timer.c ****         VRP_Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* (!VRP_Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 700:.\Generated_Source\PSoC5/VRP_Timer.c **** #endif /* VRP_Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 702:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 703:.\Generated_Source\PSoC5/VRP_Timer.c **** #if (VRP_Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 705:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 706:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 710:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 713:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/VRP_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/VRP_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/VRP_Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 718:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 720:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 721:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 724:.\Generated_Source\PSoC5/VRP_Timer.c ****     VRP_Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 726:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 727:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 728:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 732:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 735:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 737:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 738:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/VRP_Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 741:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/VRP_Timer.c **** uint8 VRP_Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 744:.\Generated_Source\PSoC5/VRP_Timer.c ****     return ((uint8)VRP_Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 746:.\Generated_Source\PSoC5/VRP_Timer.c **** #endif /* VRP_Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 748:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 749:.\Generated_Source\PSoC5/VRP_Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 20


 750:.\Generated_Source\PSoC5/VRP_Timer.c **** * Function Name: VRP_Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/VRP_Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 753:.\Generated_Source\PSoC5/VRP_Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/VRP_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 756:.\Generated_Source\PSoC5/VRP_Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 758:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 759:.\Generated_Source\PSoC5/VRP_Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/VRP_Timer.c **** *  void
 761:.\Generated_Source\PSoC5/VRP_Timer.c **** *
 762:.\Generated_Source\PSoC5/VRP_Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/VRP_Timer.c **** void VRP_Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/VRP_Timer.c **** {
 335              		.loc 1 764 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 08B5     		push	{r3, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC5/VRP_Timer.c ****     while(0u != (VRP_Timer_ReadStatusRegister() & VRP_Timer_STATUS_FIFONEMP))
 343              		.loc 1 765 0
 344 0002 01E0     		b	.L38
 345              	.L39:
 766:.\Generated_Source\PSoC5/VRP_Timer.c ****     {
 767:.\Generated_Source\PSoC5/VRP_Timer.c ****         (void)VRP_Timer_ReadCapture();
 346              		.loc 1 767 0
 347 0004 FFF7FEFF 		bl	VRP_Timer_ReadCapture
 348              	.LVL4:
 349              	.L38:
 765:.\Generated_Source\PSoC5/VRP_Timer.c ****     while(0u != (VRP_Timer_ReadStatusRegister() & VRP_Timer_STATUS_FIFONEMP))
 350              		.loc 1 765 0
 351 0008 FFF7FEFF 		bl	VRP_Timer_ReadStatusRegister
 352              	.LVL5:
 353 000c 10F0080F 		tst	r0, #8
 354 0010 F8D1     		bne	.L39
 768:.\Generated_Source\PSoC5/VRP_Timer.c ****     }
 769:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 355              		.loc 1 769 0
 356 0012 08BD     		pop	{r3, pc}
 357              		.cfi_endproc
 358              	.LFE14:
 359              		.size	VRP_Timer_ClearFIFO, .-VRP_Timer_ClearFIFO
 360              		.section	.text.VRP_Timer_Init,"ax",%progbits
 361              		.align	2
 362              		.global	VRP_Timer_Init
 363              		.thumb
 364              		.thumb_func
 365              		.type	VRP_Timer_Init, %function
 366              	VRP_Timer_Init:
 367              	.LFB0:
  44:.\Generated_Source\PSoC5/VRP_Timer.c ****     #if(!VRP_Timer_UsingFixedFunction)
 368              		.loc 1 44 0
 369              		.cfi_startproc
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 21


 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC5/VRP_Timer.c ****     VRP_Timer_WriteCounter(VRP_Timer_INIT_PERIOD);
 376              		.loc 1 118 0
 377 0002 45F6BF50 		movw	r0, #23999
 378 0006 FFF7FEFF 		bl	VRP_Timer_WritePeriod
 379              	.LVL6:
 119:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 380              		.loc 1 119 0
 381 000a 45F6BF50 		movw	r0, #23999
 382 000e FFF7FEFF 		bl	VRP_Timer_WriteCounter
 383              	.LVL7:
 142:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 384              		.loc 1 142 0
 385 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 386              	.LVL8:
 145:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 387              		.loc 1 145 0
 388 0016 064A     		ldr	r2, .L43
 389 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 390 001a 43F01003 		orr	r3, r3, #16
 391 001e 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 392              		.loc 1 148 0
 393 0020 FFF7FEFF 		bl	CyExitCriticalSection
 394              	.LVL9:
 159:.\Generated_Source\PSoC5/VRP_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 395              		.loc 1 159 0
 396 0024 FFF7FEFF 		bl	VRP_Timer_ClearFIFO
 397              	.LVL10:
 162:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 398              		.loc 1 162 0
 399 0028 0120     		movs	r0, #1
 400 002a FFF7FEFF 		bl	VRP_Timer_SetInterruptMode
 401              	.LVL11:
 402 002e 08BD     		pop	{r3, pc}
 403              	.L44:
 404              		.align	2
 405              	.L43:
 406 0030 9B640040 		.word	1073767579
 407              		.cfi_endproc
 408              	.LFE0:
 409              		.size	VRP_Timer_Init, .-VRP_Timer_Init
 410              		.section	.text.VRP_Timer_Start,"ax",%progbits
 411              		.align	2
 412              		.global	VRP_Timer_Start
 413              		.thumb
 414              		.thumb_func
 415              		.type	VRP_Timer_Start, %function
 416              	VRP_Timer_Start:
 417              	.LFB2:
 216:.\Generated_Source\PSoC5/VRP_Timer.c ****     if(VRP_Timer_initVar == 0u)
 418              		.loc 1 216 0
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 22


 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 08B5     		push	{r3, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/VRP_Timer.c ****     {
 426              		.loc 1 217 0
 427 0002 054B     		ldr	r3, .L48
 428 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 0006 23B9     		cbnz	r3, .L46
 219:.\Generated_Source\PSoC5/VRP_Timer.c **** 
 430              		.loc 1 219 0
 431 0008 FFF7FEFF 		bl	VRP_Timer_Init
 432              	.LVL12:
 221:.\Generated_Source\PSoC5/VRP_Timer.c ****     }
 433              		.loc 1 221 0
 434 000c 0122     		movs	r2, #1
 435 000e 024B     		ldr	r3, .L48
 436 0010 1A70     		strb	r2, [r3]
 437              	.L46:
 225:.\Generated_Source\PSoC5/VRP_Timer.c **** }
 438              		.loc 1 225 0
 439 0012 FFF7FEFF 		bl	VRP_Timer_Enable
 440              	.LVL13:
 441 0016 08BD     		pop	{r3, pc}
 442              	.L49:
 443              		.align	2
 444              	.L48:
 445 0018 00000000 		.word	.LANCHOR0
 446              		.cfi_endproc
 447              	.LFE2:
 448              		.size	VRP_Timer_Start, .-VRP_Timer_Start
 449              		.global	VRP_Timer_initVar
 450              		.bss
 451              		.set	.LANCHOR0,. + 0
 452              		.type	VRP_Timer_initVar, %object
 453              		.size	VRP_Timer_initVar, 1
 454              	VRP_Timer_initVar:
 455 0000 00       		.space	1
 456              		.text
 457              	.Letext0:
 458              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 459              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 460              		.section	.debug_info,"",%progbits
 461              	.Ldebug_info0:
 462 0000 E7020000 		.4byte	0x2e7
 463 0004 0400     		.2byte	0x4
 464 0006 00000000 		.4byte	.Ldebug_abbrev0
 465 000a 04       		.byte	0x4
 466 000b 01       		.uleb128 0x1
 467 000c E4010000 		.4byte	.LASF36
 468 0010 01       		.byte	0x1
 469 0011 EB000000 		.4byte	.LASF37
 470 0015 53010000 		.4byte	.LASF38
 471 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 23


 472 001d 00000000 		.4byte	0
 473 0021 00000000 		.4byte	.Ldebug_line0
 474 0025 02       		.uleb128 0x2
 475 0026 01       		.byte	0x1
 476 0027 06       		.byte	0x6
 477 0028 5B030000 		.4byte	.LASF0
 478 002c 02       		.uleb128 0x2
 479 002d 01       		.byte	0x1
 480 002e 08       		.byte	0x8
 481 002f 10010000 		.4byte	.LASF1
 482 0033 02       		.uleb128 0x2
 483 0034 02       		.byte	0x2
 484 0035 05       		.byte	0x5
 485 0036 31030000 		.4byte	.LASF2
 486 003a 02       		.uleb128 0x2
 487 003b 02       		.byte	0x2
 488 003c 07       		.byte	0x7
 489 003d 41000000 		.4byte	.LASF3
 490 0041 02       		.uleb128 0x2
 491 0042 04       		.byte	0x4
 492 0043 05       		.byte	0x5
 493 0044 4D030000 		.4byte	.LASF4
 494 0048 02       		.uleb128 0x2
 495 0049 04       		.byte	0x4
 496 004a 07       		.byte	0x7
 497 004b 23010000 		.4byte	.LASF5
 498 004f 02       		.uleb128 0x2
 499 0050 08       		.byte	0x8
 500 0051 05       		.byte	0x5
 501 0052 E8020000 		.4byte	.LASF6
 502 0056 02       		.uleb128 0x2
 503 0057 08       		.byte	0x8
 504 0058 07       		.byte	0x7
 505 0059 BE000000 		.4byte	.LASF7
 506 005d 03       		.uleb128 0x3
 507 005e 04       		.byte	0x4
 508 005f 05       		.byte	0x5
 509 0060 696E7400 		.ascii	"int\000"
 510 0064 02       		.uleb128 0x2
 511 0065 04       		.byte	0x4
 512 0066 07       		.byte	0x7
 513 0067 89020000 		.4byte	.LASF8
 514 006b 04       		.uleb128 0x4
 515 006c 35010000 		.4byte	.LASF9
 516 0070 02       		.byte	0x2
 517 0071 9201     		.2byte	0x192
 518 0073 2C000000 		.4byte	0x2c
 519 0077 04       		.uleb128 0x4
 520 0078 B4010000 		.4byte	.LASF10
 521 007c 02       		.byte	0x2
 522 007d 9301     		.2byte	0x193
 523 007f 3A000000 		.4byte	0x3a
 524 0083 02       		.uleb128 0x2
 525 0084 04       		.byte	0x4
 526 0085 04       		.byte	0x4
 527 0086 34000000 		.4byte	.LASF11
 528 008a 02       		.uleb128 0x2
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 24


 529 008b 08       		.byte	0x8
 530 008c 04       		.byte	0x4
 531 008d AD010000 		.4byte	.LASF12
 532 0091 02       		.uleb128 0x2
 533 0092 01       		.byte	0x1
 534 0093 08       		.byte	0x8
 535 0094 56030000 		.4byte	.LASF13
 536 0098 04       		.uleb128 0x4
 537 0099 1E010000 		.4byte	.LASF14
 538 009d 02       		.byte	0x2
 539 009e 3C02     		.2byte	0x23c
 540 00a0 A4000000 		.4byte	0xa4
 541 00a4 05       		.uleb128 0x5
 542 00a5 6B000000 		.4byte	0x6b
 543 00a9 04       		.uleb128 0x4
 544 00aa 00000000 		.4byte	.LASF15
 545 00ae 02       		.byte	0x2
 546 00af 3D02     		.2byte	0x23d
 547 00b1 B5000000 		.4byte	0xb5
 548 00b5 05       		.uleb128 0x5
 549 00b6 77000000 		.4byte	0x77
 550 00ba 02       		.uleb128 0x2
 551 00bb 04       		.byte	0x4
 552 00bc 07       		.byte	0x7
 553 00bd C1020000 		.4byte	.LASF16
 554 00c1 06       		.uleb128 0x6
 555 00c2 06000000 		.4byte	.LASF17
 556 00c6 01       		.byte	0x1
 557 00c7 B4       		.byte	0xb4
 558 00c8 00000000 		.4byte	.LFB1
 559 00cc 10000000 		.4byte	.LFE1-.LFB1
 560 00d0 01       		.uleb128 0x1
 561 00d1 9C       		.byte	0x9c
 562 00d2 06       		.uleb128 0x6
 563 00d3 BB010000 		.4byte	.LASF18
 564 00d7 01       		.byte	0x1
 565 00d8 F7       		.byte	0xf7
 566 00d9 00000000 		.4byte	.LFB3
 567 00dd 10000000 		.4byte	.LFE3-.LFB3
 568 00e1 01       		.uleb128 0x1
 569 00e2 9C       		.byte	0x9c
 570 00e3 07       		.uleb128 0x7
 571 00e4 82000000 		.4byte	.LASF22
 572 00e8 01       		.byte	0x1
 573 00e9 1701     		.2byte	0x117
 574 00eb 00000000 		.4byte	.LFB4
 575 00ef 0C000000 		.4byte	.LFE4-.LFB4
 576 00f3 01       		.uleb128 0x1
 577 00f4 9C       		.byte	0x9c
 578 00f5 08010000 		.4byte	0x108
 579 00f9 08       		.uleb128 0x8
 580 00fa F6020000 		.4byte	.LASF24
 581 00fe 01       		.byte	0x1
 582 00ff 1701     		.2byte	0x117
 583 0101 6B000000 		.4byte	0x6b
 584 0105 01       		.uleb128 0x1
 585 0106 50       		.byte	0x50
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 25


 586 0107 00       		.byte	0
 587 0108 09       		.uleb128 0x9
 588 0109 CA010000 		.4byte	.LASF19
 589 010d 01       		.byte	0x1
 590 010e 2E01     		.2byte	0x12e
 591 0110 00000000 		.4byte	.LFB5
 592 0114 0C000000 		.4byte	.LFE5-.LFB5
 593 0118 01       		.uleb128 0x1
 594 0119 9C       		.byte	0x9c
 595 011a 0A       		.uleb128 0xa
 596 011b 17000000 		.4byte	.LASF20
 597 011f 01       		.byte	0x1
 598 0120 4D01     		.2byte	0x14d
 599 0122 6B000000 		.4byte	0x6b
 600 0126 00000000 		.4byte	.LFB6
 601 012a 0C000000 		.4byte	.LFE6-.LFB6
 602 012e 01       		.uleb128 0x1
 603 012f 9C       		.byte	0x9c
 604 0130 0A       		.uleb128 0xa
 605 0131 CA020000 		.4byte	.LASF21
 606 0135 01       		.byte	0x1
 607 0136 6401     		.2byte	0x164
 608 0138 6B000000 		.4byte	0x6b
 609 013c 00000000 		.4byte	.LFB7
 610 0140 0C000000 		.4byte	.LFE7-.LFB7
 611 0144 01       		.uleb128 0x1
 612 0145 9C       		.byte	0x9c
 613 0146 07       		.uleb128 0x7
 614 0147 63000000 		.4byte	.LASF23
 615 014b 01       		.byte	0x1
 616 014c 7B01     		.2byte	0x17b
 617 014e 00000000 		.4byte	.LFB8
 618 0152 0C000000 		.4byte	.LFE8-.LFB8
 619 0156 01       		.uleb128 0x1
 620 0157 9C       		.byte	0x9c
 621 0158 6B010000 		.4byte	0x16b
 622 015c 08       		.uleb128 0x8
 623 015d 3B010000 		.4byte	.LASF25
 624 0161 01       		.byte	0x1
 625 0162 7B01     		.2byte	0x17b
 626 0164 6B000000 		.4byte	0x6b
 627 0168 01       		.uleb128 0x1
 628 0169 50       		.byte	0x50
 629 016a 00       		.byte	0
 630 016b 0A       		.uleb128 0xa
 631 016c AC020000 		.4byte	.LASF26
 632 0170 01       		.byte	0x1
 633 0171 9501     		.2byte	0x195
 634 0173 77000000 		.4byte	0x77
 635 0177 00000000 		.4byte	.LFB9
 636 017b 0C000000 		.4byte	.LFE9-.LFB9
 637 017f 01       		.uleb128 0x1
 638 0180 9C       		.byte	0x9c
 639 0181 07       		.uleb128 0x7
 640 0182 1B030000 		.4byte	.LASF27
 641 0186 01       		.byte	0x1
 642 0187 AF01     		.2byte	0x1af
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 26


 643 0189 00000000 		.4byte	.LFB10
 644 018d 0C000000 		.4byte	.LFE10-.LFB10
 645 0191 01       		.uleb128 0x1
 646 0192 9C       		.byte	0x9c
 647 0193 A6010000 		.4byte	0x1a6
 648 0197 08       		.uleb128 0x8
 649 0198 3A000000 		.4byte	.LASF28
 650 019c 01       		.byte	0x1
 651 019d AF01     		.2byte	0x1af
 652 019f 77000000 		.4byte	0x77
 653 01a3 01       		.uleb128 0x1
 654 01a4 50       		.byte	0x50
 655 01a5 00       		.byte	0
 656 01a6 0A       		.uleb128 0xa
 657 01a7 D5000000 		.4byte	.LASF29
 658 01ab 01       		.byte	0x1
 659 01ac C801     		.2byte	0x1c8
 660 01ae 77000000 		.4byte	0x77
 661 01b2 00000000 		.4byte	.LFB11
 662 01b6 0C000000 		.4byte	.LFE11-.LFB11
 663 01ba 01       		.uleb128 0x1
 664 01bb 9C       		.byte	0x9c
 665 01bc 07       		.uleb128 0x7
 666 01bd 04030000 		.4byte	.LASF30
 667 01c1 01       		.byte	0x1
 668 01c2 E001     		.2byte	0x1e0
 669 01c4 00000000 		.4byte	.LFB12
 670 01c8 0C000000 		.4byte	.LFE12-.LFB12
 671 01cc 01       		.uleb128 0x1
 672 01cd 9C       		.byte	0x9c
 673 01ce E1010000 		.4byte	0x1e1
 674 01d2 08       		.uleb128 0x8
 675 01d3 B6000000 		.4byte	.LASF31
 676 01d7 01       		.byte	0x1
 677 01d8 E001     		.2byte	0x1e0
 678 01da 77000000 		.4byte	0x77
 679 01de 01       		.uleb128 0x1
 680 01df 50       		.byte	0x50
 681 01e0 00       		.byte	0
 682 01e1 0A       		.uleb128 0xa
 683 01e2 97010000 		.4byte	.LASF32
 684 01e6 01       		.byte	0x1
 685 01e7 FC01     		.2byte	0x1fc
 686 01e9 77000000 		.4byte	0x77
 687 01ed 00000000 		.4byte	.LFB13
 688 01f1 14000000 		.4byte	.LFE13-.LFB13
 689 01f5 01       		.uleb128 0x1
 690 01f6 9C       		.byte	0x9c
 691 01f7 07       		.uleb128 0x7
 692 01f8 67030000 		.4byte	.LASF33
 693 01fc 01       		.byte	0x1
 694 01fd FB02     		.2byte	0x2fb
 695 01ff 00000000 		.4byte	.LFB14
 696 0203 14000000 		.4byte	.LFE14-.LFB14
 697 0207 01       		.uleb128 0x1
 698 0208 9C       		.byte	0x9c
 699 0209 20020000 		.4byte	0x220
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 27


 700 020d 0B       		.uleb128 0xb
 701 020e 08000000 		.4byte	.LVL4
 702 0212 A6010000 		.4byte	0x1a6
 703 0216 0B       		.uleb128 0xb
 704 0217 0C000000 		.4byte	.LVL5
 705 021b 1A010000 		.4byte	0x11a
 706 021f 00       		.byte	0
 707 0220 0C       		.uleb128 0xc
 708 0221 54000000 		.4byte	.LASF34
 709 0225 01       		.byte	0x1
 710 0226 2B       		.byte	0x2b
 711 0227 00000000 		.4byte	.LFB0
 712 022b 34000000 		.4byte	.LFE0-.LFB0
 713 022f 01       		.uleb128 0x1
 714 0230 9C       		.byte	0x9c
 715 0231 99020000 		.4byte	0x299
 716 0235 0D       		.uleb128 0xd
 717 0236 9D000000 		.4byte	.LASF39
 718 023a 01       		.byte	0x1
 719 023b 2F       		.byte	0x2f
 720 023c 6B000000 		.4byte	0x6b
 721 0240 00000000 		.4byte	.LLST0
 722 0244 0E       		.uleb128 0xe
 723 0245 0A000000 		.4byte	.LVL6
 724 0249 81010000 		.4byte	0x181
 725 024d 59020000 		.4byte	0x259
 726 0251 0F       		.uleb128 0xf
 727 0252 01       		.uleb128 0x1
 728 0253 50       		.byte	0x50
 729 0254 03       		.uleb128 0x3
 730 0255 0A       		.byte	0xa
 731 0256 BF5D     		.2byte	0x5dbf
 732 0258 00       		.byte	0
 733 0259 0E       		.uleb128 0xe
 734 025a 12000000 		.4byte	.LVL7
 735 025e BC010000 		.4byte	0x1bc
 736 0262 6E020000 		.4byte	0x26e
 737 0266 0F       		.uleb128 0xf
 738 0267 01       		.uleb128 0x1
 739 0268 50       		.byte	0x50
 740 0269 03       		.uleb128 0x3
 741 026a 0A       		.byte	0xa
 742 026b BF5D     		.2byte	0x5dbf
 743 026d 00       		.byte	0
 744 026e 0B       		.uleb128 0xb
 745 026f 16000000 		.4byte	.LVL8
 746 0273 D2020000 		.4byte	0x2d2
 747 0277 0B       		.uleb128 0xb
 748 0278 24000000 		.4byte	.LVL9
 749 027c DD020000 		.4byte	0x2dd
 750 0280 0B       		.uleb128 0xb
 751 0281 28000000 		.4byte	.LVL10
 752 0285 F7010000 		.4byte	0x1f7
 753 0289 10       		.uleb128 0x10
 754 028a 2E000000 		.4byte	.LVL11
 755 028e E3000000 		.4byte	0xe3
 756 0292 0F       		.uleb128 0xf
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 28


 757 0293 01       		.uleb128 0x1
 758 0294 50       		.byte	0x50
 759 0295 01       		.uleb128 0x1
 760 0296 31       		.byte	0x31
 761 0297 00       		.byte	0
 762 0298 00       		.byte	0
 763 0299 0C       		.uleb128 0xc
 764 029a 43010000 		.4byte	.LASF35
 765 029e 01       		.byte	0x1
 766 029f D7       		.byte	0xd7
 767 02a0 00000000 		.4byte	.LFB2
 768 02a4 1C000000 		.4byte	.LFE2-.LFB2
 769 02a8 01       		.uleb128 0x1
 770 02a9 9C       		.byte	0x9c
 771 02aa C1020000 		.4byte	0x2c1
 772 02ae 0B       		.uleb128 0xb
 773 02af 0C000000 		.4byte	.LVL12
 774 02b3 20020000 		.4byte	0x220
 775 02b7 0B       		.uleb128 0xb
 776 02b8 16000000 		.4byte	.LVL13
 777 02bc C1000000 		.4byte	0xc1
 778 02c0 00       		.byte	0
 779 02c1 11       		.uleb128 0x11
 780 02c2 3B030000 		.4byte	.LASF40
 781 02c6 01       		.byte	0x1
 782 02c7 1A       		.byte	0x1a
 783 02c8 6B000000 		.4byte	0x6b
 784 02cc 05       		.uleb128 0x5
 785 02cd 03       		.byte	0x3
 786 02ce 00000000 		.4byte	VRP_Timer_initVar
 787 02d2 12       		.uleb128 0x12
 788 02d3 72020000 		.4byte	.LASF41
 789 02d7 03       		.byte	0x3
 790 02d8 7D       		.byte	0x7d
 791 02d9 6B000000 		.4byte	0x6b
 792 02dd 13       		.uleb128 0x13
 793 02de 96020000 		.4byte	.LASF42
 794 02e2 03       		.byte	0x3
 795 02e3 7E       		.byte	0x7e
 796 02e4 14       		.uleb128 0x14
 797 02e5 6B000000 		.4byte	0x6b
 798 02e9 00       		.byte	0
 799 02ea 00       		.byte	0
 800              		.section	.debug_abbrev,"",%progbits
 801              	.Ldebug_abbrev0:
 802 0000 01       		.uleb128 0x1
 803 0001 11       		.uleb128 0x11
 804 0002 01       		.byte	0x1
 805 0003 25       		.uleb128 0x25
 806 0004 0E       		.uleb128 0xe
 807 0005 13       		.uleb128 0x13
 808 0006 0B       		.uleb128 0xb
 809 0007 03       		.uleb128 0x3
 810 0008 0E       		.uleb128 0xe
 811 0009 1B       		.uleb128 0x1b
 812 000a 0E       		.uleb128 0xe
 813 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 29


 814 000c 17       		.uleb128 0x17
 815 000d 11       		.uleb128 0x11
 816 000e 01       		.uleb128 0x1
 817 000f 10       		.uleb128 0x10
 818 0010 17       		.uleb128 0x17
 819 0011 00       		.byte	0
 820 0012 00       		.byte	0
 821 0013 02       		.uleb128 0x2
 822 0014 24       		.uleb128 0x24
 823 0015 00       		.byte	0
 824 0016 0B       		.uleb128 0xb
 825 0017 0B       		.uleb128 0xb
 826 0018 3E       		.uleb128 0x3e
 827 0019 0B       		.uleb128 0xb
 828 001a 03       		.uleb128 0x3
 829 001b 0E       		.uleb128 0xe
 830 001c 00       		.byte	0
 831 001d 00       		.byte	0
 832 001e 03       		.uleb128 0x3
 833 001f 24       		.uleb128 0x24
 834 0020 00       		.byte	0
 835 0021 0B       		.uleb128 0xb
 836 0022 0B       		.uleb128 0xb
 837 0023 3E       		.uleb128 0x3e
 838 0024 0B       		.uleb128 0xb
 839 0025 03       		.uleb128 0x3
 840 0026 08       		.uleb128 0x8
 841 0027 00       		.byte	0
 842 0028 00       		.byte	0
 843 0029 04       		.uleb128 0x4
 844 002a 16       		.uleb128 0x16
 845 002b 00       		.byte	0
 846 002c 03       		.uleb128 0x3
 847 002d 0E       		.uleb128 0xe
 848 002e 3A       		.uleb128 0x3a
 849 002f 0B       		.uleb128 0xb
 850 0030 3B       		.uleb128 0x3b
 851 0031 05       		.uleb128 0x5
 852 0032 49       		.uleb128 0x49
 853 0033 13       		.uleb128 0x13
 854 0034 00       		.byte	0
 855 0035 00       		.byte	0
 856 0036 05       		.uleb128 0x5
 857 0037 35       		.uleb128 0x35
 858 0038 00       		.byte	0
 859 0039 49       		.uleb128 0x49
 860 003a 13       		.uleb128 0x13
 861 003b 00       		.byte	0
 862 003c 00       		.byte	0
 863 003d 06       		.uleb128 0x6
 864 003e 2E       		.uleb128 0x2e
 865 003f 00       		.byte	0
 866 0040 3F       		.uleb128 0x3f
 867 0041 19       		.uleb128 0x19
 868 0042 03       		.uleb128 0x3
 869 0043 0E       		.uleb128 0xe
 870 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 30


 871 0045 0B       		.uleb128 0xb
 872 0046 3B       		.uleb128 0x3b
 873 0047 0B       		.uleb128 0xb
 874 0048 27       		.uleb128 0x27
 875 0049 19       		.uleb128 0x19
 876 004a 11       		.uleb128 0x11
 877 004b 01       		.uleb128 0x1
 878 004c 12       		.uleb128 0x12
 879 004d 06       		.uleb128 0x6
 880 004e 40       		.uleb128 0x40
 881 004f 18       		.uleb128 0x18
 882 0050 9742     		.uleb128 0x2117
 883 0052 19       		.uleb128 0x19
 884 0053 00       		.byte	0
 885 0054 00       		.byte	0
 886 0055 07       		.uleb128 0x7
 887 0056 2E       		.uleb128 0x2e
 888 0057 01       		.byte	0x1
 889 0058 3F       		.uleb128 0x3f
 890 0059 19       		.uleb128 0x19
 891 005a 03       		.uleb128 0x3
 892 005b 0E       		.uleb128 0xe
 893 005c 3A       		.uleb128 0x3a
 894 005d 0B       		.uleb128 0xb
 895 005e 3B       		.uleb128 0x3b
 896 005f 05       		.uleb128 0x5
 897 0060 27       		.uleb128 0x27
 898 0061 19       		.uleb128 0x19
 899 0062 11       		.uleb128 0x11
 900 0063 01       		.uleb128 0x1
 901 0064 12       		.uleb128 0x12
 902 0065 06       		.uleb128 0x6
 903 0066 40       		.uleb128 0x40
 904 0067 18       		.uleb128 0x18
 905 0068 9742     		.uleb128 0x2117
 906 006a 19       		.uleb128 0x19
 907 006b 01       		.uleb128 0x1
 908 006c 13       		.uleb128 0x13
 909 006d 00       		.byte	0
 910 006e 00       		.byte	0
 911 006f 08       		.uleb128 0x8
 912 0070 05       		.uleb128 0x5
 913 0071 00       		.byte	0
 914 0072 03       		.uleb128 0x3
 915 0073 0E       		.uleb128 0xe
 916 0074 3A       		.uleb128 0x3a
 917 0075 0B       		.uleb128 0xb
 918 0076 3B       		.uleb128 0x3b
 919 0077 05       		.uleb128 0x5
 920 0078 49       		.uleb128 0x49
 921 0079 13       		.uleb128 0x13
 922 007a 02       		.uleb128 0x2
 923 007b 18       		.uleb128 0x18
 924 007c 00       		.byte	0
 925 007d 00       		.byte	0
 926 007e 09       		.uleb128 0x9
 927 007f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 31


 928 0080 00       		.byte	0
 929 0081 3F       		.uleb128 0x3f
 930 0082 19       		.uleb128 0x19
 931 0083 03       		.uleb128 0x3
 932 0084 0E       		.uleb128 0xe
 933 0085 3A       		.uleb128 0x3a
 934 0086 0B       		.uleb128 0xb
 935 0087 3B       		.uleb128 0x3b
 936 0088 05       		.uleb128 0x5
 937 0089 27       		.uleb128 0x27
 938 008a 19       		.uleb128 0x19
 939 008b 11       		.uleb128 0x11
 940 008c 01       		.uleb128 0x1
 941 008d 12       		.uleb128 0x12
 942 008e 06       		.uleb128 0x6
 943 008f 40       		.uleb128 0x40
 944 0090 18       		.uleb128 0x18
 945 0091 9742     		.uleb128 0x2117
 946 0093 19       		.uleb128 0x19
 947 0094 00       		.byte	0
 948 0095 00       		.byte	0
 949 0096 0A       		.uleb128 0xa
 950 0097 2E       		.uleb128 0x2e
 951 0098 00       		.byte	0
 952 0099 3F       		.uleb128 0x3f
 953 009a 19       		.uleb128 0x19
 954 009b 03       		.uleb128 0x3
 955 009c 0E       		.uleb128 0xe
 956 009d 3A       		.uleb128 0x3a
 957 009e 0B       		.uleb128 0xb
 958 009f 3B       		.uleb128 0x3b
 959 00a0 05       		.uleb128 0x5
 960 00a1 27       		.uleb128 0x27
 961 00a2 19       		.uleb128 0x19
 962 00a3 49       		.uleb128 0x49
 963 00a4 13       		.uleb128 0x13
 964 00a5 11       		.uleb128 0x11
 965 00a6 01       		.uleb128 0x1
 966 00a7 12       		.uleb128 0x12
 967 00a8 06       		.uleb128 0x6
 968 00a9 40       		.uleb128 0x40
 969 00aa 18       		.uleb128 0x18
 970 00ab 9742     		.uleb128 0x2117
 971 00ad 19       		.uleb128 0x19
 972 00ae 00       		.byte	0
 973 00af 00       		.byte	0
 974 00b0 0B       		.uleb128 0xb
 975 00b1 898201   		.uleb128 0x4109
 976 00b4 00       		.byte	0
 977 00b5 11       		.uleb128 0x11
 978 00b6 01       		.uleb128 0x1
 979 00b7 31       		.uleb128 0x31
 980 00b8 13       		.uleb128 0x13
 981 00b9 00       		.byte	0
 982 00ba 00       		.byte	0
 983 00bb 0C       		.uleb128 0xc
 984 00bc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 32


 985 00bd 01       		.byte	0x1
 986 00be 3F       		.uleb128 0x3f
 987 00bf 19       		.uleb128 0x19
 988 00c0 03       		.uleb128 0x3
 989 00c1 0E       		.uleb128 0xe
 990 00c2 3A       		.uleb128 0x3a
 991 00c3 0B       		.uleb128 0xb
 992 00c4 3B       		.uleb128 0x3b
 993 00c5 0B       		.uleb128 0xb
 994 00c6 27       		.uleb128 0x27
 995 00c7 19       		.uleb128 0x19
 996 00c8 11       		.uleb128 0x11
 997 00c9 01       		.uleb128 0x1
 998 00ca 12       		.uleb128 0x12
 999 00cb 06       		.uleb128 0x6
 1000 00cc 40       		.uleb128 0x40
 1001 00cd 18       		.uleb128 0x18
 1002 00ce 9742     		.uleb128 0x2117
 1003 00d0 19       		.uleb128 0x19
 1004 00d1 01       		.uleb128 0x1
 1005 00d2 13       		.uleb128 0x13
 1006 00d3 00       		.byte	0
 1007 00d4 00       		.byte	0
 1008 00d5 0D       		.uleb128 0xd
 1009 00d6 34       		.uleb128 0x34
 1010 00d7 00       		.byte	0
 1011 00d8 03       		.uleb128 0x3
 1012 00d9 0E       		.uleb128 0xe
 1013 00da 3A       		.uleb128 0x3a
 1014 00db 0B       		.uleb128 0xb
 1015 00dc 3B       		.uleb128 0x3b
 1016 00dd 0B       		.uleb128 0xb
 1017 00de 49       		.uleb128 0x49
 1018 00df 13       		.uleb128 0x13
 1019 00e0 02       		.uleb128 0x2
 1020 00e1 17       		.uleb128 0x17
 1021 00e2 00       		.byte	0
 1022 00e3 00       		.byte	0
 1023 00e4 0E       		.uleb128 0xe
 1024 00e5 898201   		.uleb128 0x4109
 1025 00e8 01       		.byte	0x1
 1026 00e9 11       		.uleb128 0x11
 1027 00ea 01       		.uleb128 0x1
 1028 00eb 31       		.uleb128 0x31
 1029 00ec 13       		.uleb128 0x13
 1030 00ed 01       		.uleb128 0x1
 1031 00ee 13       		.uleb128 0x13
 1032 00ef 00       		.byte	0
 1033 00f0 00       		.byte	0
 1034 00f1 0F       		.uleb128 0xf
 1035 00f2 8A8201   		.uleb128 0x410a
 1036 00f5 00       		.byte	0
 1037 00f6 02       		.uleb128 0x2
 1038 00f7 18       		.uleb128 0x18
 1039 00f8 9142     		.uleb128 0x2111
 1040 00fa 18       		.uleb128 0x18
 1041 00fb 00       		.byte	0
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 33


 1042 00fc 00       		.byte	0
 1043 00fd 10       		.uleb128 0x10
 1044 00fe 898201   		.uleb128 0x4109
 1045 0101 01       		.byte	0x1
 1046 0102 11       		.uleb128 0x11
 1047 0103 01       		.uleb128 0x1
 1048 0104 31       		.uleb128 0x31
 1049 0105 13       		.uleb128 0x13
 1050 0106 00       		.byte	0
 1051 0107 00       		.byte	0
 1052 0108 11       		.uleb128 0x11
 1053 0109 34       		.uleb128 0x34
 1054 010a 00       		.byte	0
 1055 010b 03       		.uleb128 0x3
 1056 010c 0E       		.uleb128 0xe
 1057 010d 3A       		.uleb128 0x3a
 1058 010e 0B       		.uleb128 0xb
 1059 010f 3B       		.uleb128 0x3b
 1060 0110 0B       		.uleb128 0xb
 1061 0111 49       		.uleb128 0x49
 1062 0112 13       		.uleb128 0x13
 1063 0113 3F       		.uleb128 0x3f
 1064 0114 19       		.uleb128 0x19
 1065 0115 02       		.uleb128 0x2
 1066 0116 18       		.uleb128 0x18
 1067 0117 00       		.byte	0
 1068 0118 00       		.byte	0
 1069 0119 12       		.uleb128 0x12
 1070 011a 2E       		.uleb128 0x2e
 1071 011b 00       		.byte	0
 1072 011c 3F       		.uleb128 0x3f
 1073 011d 19       		.uleb128 0x19
 1074 011e 03       		.uleb128 0x3
 1075 011f 0E       		.uleb128 0xe
 1076 0120 3A       		.uleb128 0x3a
 1077 0121 0B       		.uleb128 0xb
 1078 0122 3B       		.uleb128 0x3b
 1079 0123 0B       		.uleb128 0xb
 1080 0124 27       		.uleb128 0x27
 1081 0125 19       		.uleb128 0x19
 1082 0126 49       		.uleb128 0x49
 1083 0127 13       		.uleb128 0x13
 1084 0128 3C       		.uleb128 0x3c
 1085 0129 19       		.uleb128 0x19
 1086 012a 00       		.byte	0
 1087 012b 00       		.byte	0
 1088 012c 13       		.uleb128 0x13
 1089 012d 2E       		.uleb128 0x2e
 1090 012e 01       		.byte	0x1
 1091 012f 3F       		.uleb128 0x3f
 1092 0130 19       		.uleb128 0x19
 1093 0131 03       		.uleb128 0x3
 1094 0132 0E       		.uleb128 0xe
 1095 0133 3A       		.uleb128 0x3a
 1096 0134 0B       		.uleb128 0xb
 1097 0135 3B       		.uleb128 0x3b
 1098 0136 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 34


 1099 0137 27       		.uleb128 0x27
 1100 0138 19       		.uleb128 0x19
 1101 0139 3C       		.uleb128 0x3c
 1102 013a 19       		.uleb128 0x19
 1103 013b 00       		.byte	0
 1104 013c 00       		.byte	0
 1105 013d 14       		.uleb128 0x14
 1106 013e 05       		.uleb128 0x5
 1107 013f 00       		.byte	0
 1108 0140 49       		.uleb128 0x49
 1109 0141 13       		.uleb128 0x13
 1110 0142 00       		.byte	0
 1111 0143 00       		.byte	0
 1112 0144 00       		.byte	0
 1113              		.section	.debug_loc,"",%progbits
 1114              	.Ldebug_loc0:
 1115              	.LLST0:
 1116 0000 16000000 		.4byte	.LVL8
 1117 0004 23000000 		.4byte	.LVL9-1
 1118 0008 0100     		.2byte	0x1
 1119 000a 50       		.byte	0x50
 1120 000b 00000000 		.4byte	0
 1121 000f 00000000 		.4byte	0
 1122              		.section	.debug_aranges,"",%progbits
 1123 0000 8C000000 		.4byte	0x8c
 1124 0004 0200     		.2byte	0x2
 1125 0006 00000000 		.4byte	.Ldebug_info0
 1126 000a 04       		.byte	0x4
 1127 000b 00       		.byte	0
 1128 000c 0000     		.2byte	0
 1129 000e 0000     		.2byte	0
 1130 0010 00000000 		.4byte	.LFB1
 1131 0014 10000000 		.4byte	.LFE1-.LFB1
 1132 0018 00000000 		.4byte	.LFB3
 1133 001c 10000000 		.4byte	.LFE3-.LFB3
 1134 0020 00000000 		.4byte	.LFB4
 1135 0024 0C000000 		.4byte	.LFE4-.LFB4
 1136 0028 00000000 		.4byte	.LFB5
 1137 002c 0C000000 		.4byte	.LFE5-.LFB5
 1138 0030 00000000 		.4byte	.LFB6
 1139 0034 0C000000 		.4byte	.LFE6-.LFB6
 1140 0038 00000000 		.4byte	.LFB7
 1141 003c 0C000000 		.4byte	.LFE7-.LFB7
 1142 0040 00000000 		.4byte	.LFB8
 1143 0044 0C000000 		.4byte	.LFE8-.LFB8
 1144 0048 00000000 		.4byte	.LFB9
 1145 004c 0C000000 		.4byte	.LFE9-.LFB9
 1146 0050 00000000 		.4byte	.LFB10
 1147 0054 0C000000 		.4byte	.LFE10-.LFB10
 1148 0058 00000000 		.4byte	.LFB11
 1149 005c 0C000000 		.4byte	.LFE11-.LFB11
 1150 0060 00000000 		.4byte	.LFB12
 1151 0064 0C000000 		.4byte	.LFE12-.LFB12
 1152 0068 00000000 		.4byte	.LFB13
 1153 006c 14000000 		.4byte	.LFE13-.LFB13
 1154 0070 00000000 		.4byte	.LFB14
 1155 0074 14000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 35


 1156 0078 00000000 		.4byte	.LFB0
 1157 007c 34000000 		.4byte	.LFE0-.LFB0
 1158 0080 00000000 		.4byte	.LFB2
 1159 0084 1C000000 		.4byte	.LFE2-.LFB2
 1160 0088 00000000 		.4byte	0
 1161 008c 00000000 		.4byte	0
 1162              		.section	.debug_ranges,"",%progbits
 1163              	.Ldebug_ranges0:
 1164 0000 00000000 		.4byte	.LFB1
 1165 0004 10000000 		.4byte	.LFE1
 1166 0008 00000000 		.4byte	.LFB3
 1167 000c 10000000 		.4byte	.LFE3
 1168 0010 00000000 		.4byte	.LFB4
 1169 0014 0C000000 		.4byte	.LFE4
 1170 0018 00000000 		.4byte	.LFB5
 1171 001c 0C000000 		.4byte	.LFE5
 1172 0020 00000000 		.4byte	.LFB6
 1173 0024 0C000000 		.4byte	.LFE6
 1174 0028 00000000 		.4byte	.LFB7
 1175 002c 0C000000 		.4byte	.LFE7
 1176 0030 00000000 		.4byte	.LFB8
 1177 0034 0C000000 		.4byte	.LFE8
 1178 0038 00000000 		.4byte	.LFB9
 1179 003c 0C000000 		.4byte	.LFE9
 1180 0040 00000000 		.4byte	.LFB10
 1181 0044 0C000000 		.4byte	.LFE10
 1182 0048 00000000 		.4byte	.LFB11
 1183 004c 0C000000 		.4byte	.LFE11
 1184 0050 00000000 		.4byte	.LFB12
 1185 0054 0C000000 		.4byte	.LFE12
 1186 0058 00000000 		.4byte	.LFB13
 1187 005c 14000000 		.4byte	.LFE13
 1188 0060 00000000 		.4byte	.LFB14
 1189 0064 14000000 		.4byte	.LFE14
 1190 0068 00000000 		.4byte	.LFB0
 1191 006c 34000000 		.4byte	.LFE0
 1192 0070 00000000 		.4byte	.LFB2
 1193 0074 1C000000 		.4byte	.LFE2
 1194 0078 00000000 		.4byte	0
 1195 007c 00000000 		.4byte	0
 1196              		.section	.debug_line,"",%progbits
 1197              	.Ldebug_line0:
 1198 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1198      02005300 
 1198      00000201 
 1198      FB0E0D00 
 1198      01010101 
 1199              	.LASF15:
 1200 0000 72656731 		.ascii	"reg16\000"
 1200      3600
 1201              	.LASF17:
 1202 0006 5652505F 		.ascii	"VRP_Timer_Enable\000"
 1202      54696D65 
 1202      725F456E 
 1202      61626C65 
 1202      00
 1203              	.LASF20:
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 36


 1204 0017 5652505F 		.ascii	"VRP_Timer_ReadStatusRegister\000"
 1204      54696D65 
 1204      725F5265 
 1204      61645374 
 1204      61747573 
 1205              	.LASF11:
 1206 0034 666C6F61 		.ascii	"float\000"
 1206      7400
 1207              	.LASF28:
 1208 003a 70657269 		.ascii	"period\000"
 1208      6F6400
 1209              	.LASF3:
 1210 0041 73686F72 		.ascii	"short unsigned int\000"
 1210      7420756E 
 1210      7369676E 
 1210      65642069 
 1210      6E7400
 1211              	.LASF34:
 1212 0054 5652505F 		.ascii	"VRP_Timer_Init\000"
 1212      54696D65 
 1212      725F496E 
 1212      697400
 1213              	.LASF23:
 1214 0063 5652505F 		.ascii	"VRP_Timer_WriteControlRegister\000"
 1214      54696D65 
 1214      725F5772 
 1214      69746543 
 1214      6F6E7472 
 1215              	.LASF22:
 1216 0082 5652505F 		.ascii	"VRP_Timer_SetInterruptMode\000"
 1216      54696D65 
 1216      725F5365 
 1216      74496E74 
 1216      65727275 
 1217              	.LASF39:
 1218 009d 5652505F 		.ascii	"VRP_Timer_interruptState\000"
 1218      54696D65 
 1218      725F696E 
 1218      74657272 
 1218      75707453 
 1219              	.LASF31:
 1220 00b6 636F756E 		.ascii	"counter\000"
 1220      74657200 
 1221              	.LASF7:
 1222 00be 6C6F6E67 		.ascii	"long long unsigned int\000"
 1222      206C6F6E 
 1222      6720756E 
 1222      7369676E 
 1222      65642069 
 1223              	.LASF29:
 1224 00d5 5652505F 		.ascii	"VRP_Timer_ReadCapture\000"
 1224      54696D65 
 1224      725F5265 
 1224      61644361 
 1224      70747572 
 1225              	.LASF37:
 1226 00eb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\VRP_Timer.c\000"
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 37


 1226      6E657261 
 1226      7465645F 
 1226      536F7572 
 1226      63655C50 
 1227              	.LASF1:
 1228 0110 756E7369 		.ascii	"unsigned char\000"
 1228      676E6564 
 1228      20636861 
 1228      7200
 1229              	.LASF14:
 1230 011e 72656738 		.ascii	"reg8\000"
 1230      00
 1231              	.LASF5:
 1232 0123 6C6F6E67 		.ascii	"long unsigned int\000"
 1232      20756E73 
 1232      69676E65 
 1232      6420696E 
 1232      7400
 1233              	.LASF9:
 1234 0135 75696E74 		.ascii	"uint8\000"
 1234      3800
 1235              	.LASF25:
 1236 013b 636F6E74 		.ascii	"control\000"
 1236      726F6C00 
 1237              	.LASF35:
 1238 0143 5652505F 		.ascii	"VRP_Timer_Start\000"
 1238      54696D65 
 1238      725F5374 
 1238      61727400 
 1239              	.LASF38:
 1240 0153 433A5C55 		.ascii	"C:\\Users\\anju singh\\Desktop\\psoc_intro\\psoc_in"
 1240      73657273 
 1240      5C616E6A 
 1240      75207369 
 1240      6E67685C 
 1241 0181 74726F5C 		.ascii	"tro\\Assignment1.cydsn\000"
 1241      41737369 
 1241      676E6D65 
 1241      6E74312E 
 1241      63796473 
 1242              	.LASF32:
 1243 0197 5652505F 		.ascii	"VRP_Timer_ReadCounter\000"
 1243      54696D65 
 1243      725F5265 
 1243      6164436F 
 1243      756E7465 
 1244              	.LASF12:
 1245 01ad 646F7562 		.ascii	"double\000"
 1245      6C6500
 1246              	.LASF10:
 1247 01b4 75696E74 		.ascii	"uint16\000"
 1247      313600
 1248              	.LASF18:
 1249 01bb 5652505F 		.ascii	"VRP_Timer_Stop\000"
 1249      54696D65 
 1249      725F5374 
 1249      6F7000
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 38


 1250              	.LASF19:
 1251 01ca 5652505F 		.ascii	"VRP_Timer_SoftwareCapture\000"
 1251      54696D65 
 1251      725F536F 
 1251      66747761 
 1251      72654361 
 1252              	.LASF36:
 1253 01e4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1253      4320342E 
 1253      392E3320 
 1253      32303135 
 1253      30333033 
 1254 0217 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1254      20726576 
 1254      6973696F 
 1254      6E203232 
 1254      31323230 
 1255 024a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1255      66756E63 
 1255      74696F6E 
 1255      2D736563 
 1255      74696F6E 
 1256              	.LASF41:
 1257 0272 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1257      74657243 
 1257      72697469 
 1257      63616C53 
 1257      65637469 
 1258              	.LASF8:
 1259 0289 756E7369 		.ascii	"unsigned int\000"
 1259      676E6564 
 1259      20696E74 
 1259      00
 1260              	.LASF42:
 1261 0296 43794578 		.ascii	"CyExitCriticalSection\000"
 1261      69744372 
 1261      69746963 
 1261      616C5365 
 1261      6374696F 
 1262              	.LASF26:
 1263 02ac 5652505F 		.ascii	"VRP_Timer_ReadPeriod\000"
 1263      54696D65 
 1263      725F5265 
 1263      61645065 
 1263      72696F64 
 1264              	.LASF16:
 1265 02c1 73697A65 		.ascii	"sizetype\000"
 1265      74797065 
 1265      00
 1266              	.LASF21:
 1267 02ca 5652505F 		.ascii	"VRP_Timer_ReadControlRegister\000"
 1267      54696D65 
 1267      725F5265 
 1267      6164436F 
 1267      6E74726F 
 1268              	.LASF6:
 1269 02e8 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\ANJUSI~1\AppData\Local\Temp\cc79434j.s 			page 39


 1269      206C6F6E 
 1269      6720696E 
 1269      7400
 1270              	.LASF24:
 1271 02f6 696E7465 		.ascii	"interruptMode\000"
 1271      72727570 
 1271      744D6F64 
 1271      6500
 1272              	.LASF30:
 1273 0304 5652505F 		.ascii	"VRP_Timer_WriteCounter\000"
 1273      54696D65 
 1273      725F5772 
 1273      69746543 
 1273      6F756E74 
 1274              	.LASF27:
 1275 031b 5652505F 		.ascii	"VRP_Timer_WritePeriod\000"
 1275      54696D65 
 1275      725F5772 
 1275      69746550 
 1275      6572696F 
 1276              	.LASF2:
 1277 0331 73686F72 		.ascii	"short int\000"
 1277      7420696E 
 1277      7400
 1278              	.LASF40:
 1279 033b 5652505F 		.ascii	"VRP_Timer_initVar\000"
 1279      54696D65 
 1279      725F696E 
 1279      69745661 
 1279      7200
 1280              	.LASF4:
 1281 034d 6C6F6E67 		.ascii	"long int\000"
 1281      20696E74 
 1281      00
 1282              	.LASF13:
 1283 0356 63686172 		.ascii	"char\000"
 1283      00
 1284              	.LASF0:
 1285 035b 7369676E 		.ascii	"signed char\000"
 1285      65642063 
 1285      68617200 
 1286              	.LASF33:
 1287 0367 5652505F 		.ascii	"VRP_Timer_ClearFIFO\000"
 1287      54696D65 
 1287      725F436C 
 1287      65617246 
 1287      49464F00 
 1288              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
